'use client';

import * as React from 'react';
import { cn } from '../../utils/cn';

export interface TextFieldProps extends React.ComponentPropsWithoutRef<'input'> {}

const PasswordField = React.forwardRef<HTMLInputElement, TextFieldProps>((props, ref) => {
  const { className, placeholder, ...inputProps } = props;
  const [inputType, setInputType] = React.useState('password');
  return (
    <div
      className={cn(
        'flex h-10 w-full overflow-hidden rounded-lg border border-border bg-elements px-4 pr-2.5 text-[13px] text-foreground outline-none transition-all duration-100 placeholder:text-placeholder',
        'file:border-0 file:bg-transparent file:text-sm file:font-medium',
        'disabled:cursor-not-allowed disabled:opacity-50',
        '[&:has(input:focus)]:bg-transparent [&:has(input:focus)]:ring-2 [&:has(input:focus)]:ring-primary [&:has(input:focus)]:ring-offset-2 [&:has(input:focus)]:ring-offset-background',
        className,
      )}
    >
      <input
        className="h-full w-full bg-transparent outline-none placeholder:text-placeholder"
        placeholder={placeholder}
        ref={ref}
        {...inputProps}
        type={inputType}
      />
      <button
        type="button"
        className="my-1 flex items-center justify-center rounded px-1.5"
        onClick={() => setInputType((prev) => (prev === 'password' ? 'text' : 'password'))}
      >
        {inputType === 'password' ? <EyeOffIcon /> : <EyeIcon />}
      </button>
    </div>
  );
});

PasswordField.displayName = 'PasswordField';

const EyeIcon = () => {
  return (
    <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M2.16663 10C2.16663 9.69106 2.28839 9.19903 2.59185 8.61638C2.89065 8.04269 3.3501 7.41173 3.98493 6.82573C5.2486 5.65927 7.2115 4.66667 9.99996 4.66667C12.7884 4.66667 14.7513 5.65927 16.015 6.82573C16.6498 7.41173 17.1093 8.04269 17.4081 8.61638C17.7115 9.19903 17.8333 9.69106 17.8333 10C17.8333 10.3089 17.7115 10.801 17.4081 11.3836C17.1093 11.9573 16.6498 12.5883 16.015 13.1743C14.7513 14.3407 12.7884 15.3333 9.99996 15.3333C7.2115 15.3333 5.2486 14.3407 3.98493 13.1743C3.3501 12.5883 2.89065 11.9573 2.59185 11.3836C2.28839 10.801 2.16663 10.3089 2.16663 10ZM9.99996 3.66667C6.95508 3.66667 4.75131 4.7574 3.30665 6.09093C2.58732 6.75493 2.05718 7.47814 1.70494 8.15445C1.35736 8.8218 1.16663 9.47561 1.16663 10C1.16663 10.5244 1.35736 11.1782 1.70494 11.8455C2.05718 12.5219 2.58732 13.2451 3.30665 13.9091C4.75131 15.2426 6.95508 16.3333 9.99996 16.3333C13.0448 16.3333 15.2486 15.2426 16.6933 13.9091C17.4126 13.2451 17.9427 12.5219 18.295 11.8455C18.6426 11.1782 18.8333 10.5244 18.8333 10C18.8333 9.47561 18.6426 8.8218 18.295 8.15445C17.9427 7.47814 17.4126 6.75493 16.6933 6.09093C15.2486 4.7574 13.0448 3.66667 9.99996 3.66667ZM7.99988 10C7.99988 8.89545 8.89531 8.00002 9.99988 8.00002C11.1044 8.00002 11.9999 8.89545 11.9999 10C11.9999 11.1046 11.1044 12 9.99988 12C8.89531 12 7.99988 11.1046 7.99988 10ZM9.99988 7.00002C8.34302 7.00002 6.99988 8.34317 6.99988 10C6.99988 11.6569 8.34302 13 9.99988 13C11.6567 13 12.9999 11.6569 12.9999 10C12.9999 8.34317 11.6567 7.00002 9.99988 7.00002Z"
        fill="#6F6F6F"
      />
    </svg>
  );
};

const EyeOffIcon = () => {
  return (
    <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M2.85343 2.14647C2.65817 1.9512 2.34159 1.9512 2.14632 2.14647C1.95106 2.34173 1.95106 2.65831 2.14632 2.85357L4.47795 5.1852C3.40648 5.87551 2.61031 6.7194 2.0685 7.53868C1.48207 8.42545 1.16663 9.32599 1.16663 10C1.16663 10.5244 1.35736 11.1782 1.70494 11.8455C2.05718 12.5219 2.58732 13.2451 3.30665 13.9091C4.75131 15.2426 6.95508 16.3333 9.99996 16.3333C11.8369 16.3333 13.3707 15.9363 14.6177 15.325L17.1463 17.8536C17.3416 18.0488 17.6582 18.0488 17.8534 17.8536C18.0487 17.6583 18.0487 17.3417 17.8534 17.1465L2.85343 2.14647ZM13.8649 14.5722L11.7381 12.4454C11.2478 12.7944 10.6474 13 9.99988 13C8.34302 13 6.99988 11.6569 6.99988 10C6.99988 9.35248 7.2055 8.75212 7.55454 8.26179L5.20361 5.91086C4.15968 6.54301 3.40152 7.33588 2.9026 8.09029C2.37813 8.88337 2.16663 9.59189 2.16663 10C2.16663 10.3089 2.28839 10.801 2.59185 11.3836C2.89065 11.9573 3.3501 12.5883 3.98493 13.1743C5.2486 14.3407 7.2115 15.3333 9.99996 15.3333C11.5327 15.3333 12.8137 15.0335 13.8649 14.5722ZM8.27672 8.98397C8.10068 9.2817 7.99988 9.62878 7.99988 10C7.99988 11.1046 8.89531 12 9.99988 12C10.3711 12 10.7182 11.8992 11.0159 11.7232L8.27672 8.98397ZM9.99996 4.66667C9.12341 4.66667 8.32998 4.76475 7.6155 4.93444C7.34683 4.99825 7.0773 4.83218 7.01349 4.56351C6.94968 4.29484 7.11575 4.02531 7.38442 3.9615C8.17717 3.77322 9.04826 3.66667 9.99996 3.66667C13.0448 3.66667 15.2486 4.7574 16.6933 6.09093C17.4126 6.75493 17.9427 7.47814 18.295 8.15445C18.6426 8.8218 18.8333 9.47561 18.8333 10C18.8333 10.9647 18.1855 12.43 16.9243 13.6874C16.7288 13.8824 16.4122 13.8819 16.2172 13.6864C16.0223 13.4908 16.0227 13.1742 16.2183 12.9793C17.3651 11.8358 17.8333 10.6102 17.8333 10C17.8333 9.69106 17.7115 9.19903 17.4081 8.61638C17.1093 8.04269 16.6498 7.41173 16.015 6.82573C14.7513 5.65927 12.7884 4.66667 9.99996 4.66667Z"
        fill="#6F6F6F"
      />
    </svg>
  );
};

export { PasswordField };
